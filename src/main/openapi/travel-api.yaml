openapi: "3.0.0"
tags:
  - name: location
    description: "Travel api for retrieving locations"
  - name: authentication
    description: "Authentication and Sign-up API"
  - name: user
    description: "User API"
info:
  title: "Spring boot basic auth jwt"
  version: "1.0.0"
  description: "Spring boot basic authentication wih jwt authorization."
  contact:
    name: "Carlo Butelli"
    email: "dev.butelli@gmail.com"
    url: https://carlobutelli.com/
servers:
  - url: http://localhost:8080
paths:
  /api/auth/sign-up:
    post:
      operationId: "sign-up"
      description: "Sign up user"
      tags:
        - authentication
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          description: User's data
          required: true
          schema:
            $ref: '#/components/schemas/SignUpRequest'
      responses:
        200:
          $ref: '#/components/responses/Message'
  /api/auth/login:
    post:
      operationId: "login"
      description: "Login user"
      tags:
        - authentication
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: User's credentials
          schema:
            properties:
              username:
                type: string
                required: true
              password:
                type: string
                required: true
      responses:
        200:
          description: OK
#          $ref: '#/components/responses/JwtResponse'
  /users/all:
    get:
      description: "Get all users"
      tags:
        - users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{username}:
    get:
      operationId: "getUser"
      description: "Get user by username"
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/jwt'
      responses:
        200:
          $ref: '#/components/responses/UserResponse'
        404:
          $ref: '#/components/responses/404'
  /travel/locations:
    get:
      operationId: "getLocations"
      description: "Get all locations"
      tags:
        - location
      parameters:
        - $ref: '#/components/parameters/accept-language'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
  /travel/locations/{type}/{code}:
    get:
      operationId: "getLocationByTypeAndCode"
      description: "Get location by type and code"
      tags:
        - location
      parameters:
        - name: type
          in: path
          description: The type of the location
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
        - name: code
          in: path
          description: The ISO code of the required airport
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/accept-language'
      responses:
        200:
          $ref: '#/components/responses/Location'
        404:
          $ref: '#/components/responses/404'
components:
  parameters:
    username:
      in: path
      name: username
      description: "Username of the user"
      required: true
      schema:
        type: string
    jwt:
      in: header
      name: Authorization
      description: "jwt to access the resource"
      schema:
        type: string
        example: Bearer <jwt>
      required: true
    accept-language:
      in: header
      name: accept-language
      schema:
        type: string
      required: false
      description:
        "The accept language header should be used to internationalize the response.
         If not specified or the requested language is not supported, english should be returned.
         See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language for further details."
  responses:
    MessageResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    UsersResponse:
      description: OK
      content:
        application/json:
      schema:
        type: array
        items:
          $ref: '#/components/schemas/User'
    JwtResponse:
      description: OK
      content:
        application/json:
      schema:
        $ref: '#/components/schemas/Jwt'
    Location:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Location'
    Locations:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Location'
    404:
      description: NOTFOUND
  schemas:
    SignUpRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
    Credentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Jwt:
      type: object
      properties:
        token:
          type: string
        type:
          type: string
        id:
          type: integer
        username:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleType'
    Location:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/LocationType'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        description:
          type: string
        parentCode:
          type: string
        parentType:
          $ref: '#/components/schemas/LocationType'
    LocationType:
      type: string
      enum:
        - country
        - city
        - airport
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Message:
      type: object
      properties:
        message:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          $ref: '#/components/schemas/RoleType'
    RoleType:
      type: string
      enum:
        - ROLE_USER
        - ROLE_ADMIN
        - ROLE_OPS